"""empty message

Revision ID: 75ab7b6882c2
Revises: 
Create Date: 2023-05-27 00:30:50.435832

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '75ab7b6882c2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('authors',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('flourished_start', sa.Integer(), nullable=True),
    sa.Column('flourished_end', sa.Integer(), nullable=True),
    sa.Column('authorship', sa.Float(precision=4), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('digesta_books',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('book_nr', sa.Integer(), nullable=False),
    sa.Column('book_latin_name', sa.String(length=256), nullable=False),
    sa.Column('book_polish_name', sa.String(length=256), nullable=False),
    sa.Column('share', sa.Float(precision=4), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('book_latin_name'),
    sa.UniqueConstraint('book_nr'),
    sa.UniqueConstraint('book_polish_name')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('privileged', sa.Boolean(), nullable=True),
    sa.Column('subscription_until', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=80), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(length=256), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('authorships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('authorship', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['book_id'], ['digesta_books.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id', 'book_id')
    )
    op.create_table('digesta_tituli',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('title_lat', sa.String(length=256), nullable=False),
    sa.Column('title_pl', sa.String(length=256), nullable=False),
    sa.Column('book_id', sa.Integer(), nullable=False),
    sa.Column('share', sa.Float(precision=4), nullable=True),
    sa.Column('book_share', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['digesta_books.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number', 'book_id')
    )
    op.create_table('opera',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title_lat', sa.String(length=256), nullable=False),
    sa.Column('title_pl', sa.String(length=256), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('coverage', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title_lat', 'author_id')
    )
    op.create_table('libri',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opus_id', sa.Integer(), nullable=False),
    sa.Column('liber', sa.String(length=256), nullable=False),
    sa.ForeignKeyConstraint(['opus_id'], ['opera.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opus_id', 'liber')
    )
    op.create_table('opera_book_coverage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opus_id', sa.Integer(), nullable=True),
    sa.Column('book_id', sa.Integer(), nullable=True),
    sa.Column('coverage', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['book_id'], ['digesta_books.id'], ),
    sa.ForeignKeyConstraint(['opus_id'], ['opera.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opus_id', 'book_id')
    )
    op.create_table('opera_titulus_coverage',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opus_id', sa.Integer(), nullable=True),
    sa.Column('titulus_id', sa.Integer(), nullable=True),
    sa.Column('coverage', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['opus_id'], ['opera.id'], ),
    sa.ForeignKeyConstraint(['titulus_id'], ['digesta_tituli.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('opus_id', 'titulus_id')
    )
    op.create_table('titulus_authorships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=True),
    sa.Column('titulus_id', sa.Integer(), nullable=True),
    sa.Column('authorship', sa.Float(precision=4), nullable=True),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['titulus_id'], ['digesta_tituli.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('author_id', 'titulus_id')
    )
    op.create_table('digesta_leges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('address_lat', sa.Text(), nullable=False),
    sa.Column('address_pl', sa.Text(), nullable=False),
    sa.Column('lex_nr', sa.String(), nullable=False),
    sa.Column('titulus_id', sa.Integer(), nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('opus_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['authors.id'], ),
    sa.ForeignKeyConstraint(['opus_id'], ['libri.id'], ),
    sa.ForeignKeyConstraint(['titulus_id'], ['digesta_tituli.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('lex_nr', 'titulus_id')
    )
    op.create_table('digesta_paragraphi',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('key', sa.String(length=56), nullable=False),
    sa.Column('text_lat', sa.Text(), nullable=False),
    sa.Column('text_pl', sa.Text(), nullable=False),
    sa.Column('lex_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lex_id'], ['digesta_leges.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key', 'lex_id')
    )
    op.create_table('comments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment', sa.Text(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('paragraphus_id', sa.Integer(), nullable=True),
    sa.Column('reply_to_comment_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['paragraphus_id'], ['digesta_paragraphi.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['reply_to_comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['comment_id'], ['comments.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('likes')
    op.drop_table('comments')
    op.drop_table('digesta_paragraphi')
    op.drop_table('digesta_leges')
    op.drop_table('titulus_authorships')
    op.drop_table('opera_titulus_coverage')
    op.drop_table('opera_book_coverage')
    op.drop_table('libri')
    op.drop_table('opera')
    op.drop_table('digesta_tituli')
    op.drop_table('authorships')
    op.drop_table('users')
    op.drop_table('digesta_books')
    op.drop_table('authors')
    # ### end Alembic commands ###
